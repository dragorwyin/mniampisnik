@import "./variables";
@import "./mixins";
@import "./components/components";

html {
  font-family: var(--font-family);
  font-size: var(--font-size);
}

* {
	font-family: var(--font-family);
	box-sizing: border-box;
}

.primary-font {
  color: var(--primary-color);
}

.secondary-font {
  color: var(--secondary-color);
}

span, p, article {
  color: var(--font-color);
}

article {
	--font-size: 14px;
	--p-size: var(--font-size);
	--h1-size: 1.5em;
	--h2-size: 1.25em;

	p {
		margin: .5rem 0;
	}

	img {
		max-width: 100%;
	}
}

.relative {
	position: relative;
}

.horizontal-center {
	display: flex;
	justify-content: center;
}

.light {
  font-weight: 300;
}

.normal {
  font-weight: 400;
}

.bold {
  font-weight: 700;
}

.text-center {
  text-align: center;
}

h1, h2, h3, h4, h5, h6, p, strong {
  color: var(--font-color);
}

body {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body, #root, main, .App {
	display: flex;
	flex-direction: column;
  height: 100%;
}

main.App > .background {
	position: absolute;
	z-index: -1;
	top: 0;
	left: 0;
	width: 100%;
}

// default font sizes
@each $name, $size in map-get($font-sizes, lg) {
  #{$name} {
    font-size: var(--#{$name}-size);
  }
}

.on-mobile-only {
	display: none !important;
}

@media screen and (max-width: #{map-get($viewports, lg)}) {
	// empty
}

@media screen and (max-width: #{map-get($viewports, md)}) {
  // empty
}

@media screen and (max-width: #{map-get($viewports, sm)}) {
  main:before {
    content: none;
	}

	.on-mobile-only {
		display: flex !important;
	}
}

.container {
  margin: auto;
  padding-left: 2rem;
  padding-right: 2rem;
  width: var(--size-container-xlg);
}

@each $name, $size in $viewports {
  @media screen and (max-width: #{$size}) {
    body .container {
      width: var(--size-container-#{$name});
    }
  }
}

.pull-right {
	display: flex;
	justify-content: flex-end;
}

.recipe-editor {

	.rdw-editor-main {
		border: 1px solid #f1f1f1;
	}

	.rdw-editor-toolbar {
		margin-bottom: 0;
	}

	.rdw-dropdownoption-active {
		background: #e0e0e0;
	}

	.rdw-dropdownoption-default {
		color: var(--font-color);
		width: 100%;
		text-align: center;
	}

	.rdw-dropdown-wrapper .rdw-dropdown-optionwrapper {
		overflow-y: hidden;
		overflow: hidden;
		display: flex;
		flex-direction: column;
	}

	.public-DraftEditor-content {
		padding: 1rem;
	}

	.public-DraftStyleDefault-block {
		margin: 0;
		margin-bottom: 0.5rem;
	}
}

// All responsive resolutions
@each $resolution, $size in $viewports {
  // font sizes
  @media screen and (max-width: $size) {
    @each $name, $size in map-get($font-sizes, $resolution) {
      :root {
        --#{$name}-size: #{$size};
      }
    }
  }
}
